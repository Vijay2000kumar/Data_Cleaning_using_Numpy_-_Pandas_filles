# -*- coding: utf-8 -*-
"""Missing value handling pandas Data cleaning-2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dRSUAGYVwaqq5FxsQ2y4dT9k48B-JiTj
"""

#import pandas pakage alias name pd
import pandas as pd

#to read the excel or other file we use pd.read_
df= pd.read_excel("/content/rollingsales_bronx.xlsx")

# to see first five rows values
df.head()

df1=df.drop(df.index[:3], axis=0)

df1

#we have to read again excel file to skip first four rows
df=pd.read_excel("/content/rollingsales_bronx.xlsx", skiprows=4, header=0)
df

# see
df.head()

#to see last row values
df.tail()

#to see the number of rews and columns
df.shape

#to see statistics informations
df.describe()

# to see metadata
df.info()

# to see columns name
df.columns

#to write in title case name of columns
df.columns=df.columns.str.title()

df.columns

# replace the whitespace names with underscore("","_")
df.columns=df.columns.str.replace(" ","_")

df.columns

# to check columns name and their datatype according to which type values they contain
df.dtypes

# after observation we have to convert Year_Built columns data type float to object type
df['Year_Built']=df['Year_Built'].astype("str")

df.dtypes

"""All data types appear in order except the Year_Built column, which should be categorical. While this has no major significance, when we aggregate these columns Year_Built will likely be included."""

# import seaborn pakage and matplotlib
import seaborn as sns
import matplotlib.pyplot as plt

#extract the column names
cols = df.columns

#plot a heatmap of missing values with seaborn
plt.figure(figsize = (10,5))
sns.heatmap(df[cols].isnull())

"""The first line of code, cols = df.columns, extracts the column names from the DataFrame and stores them in a list called cols.

The second line of code, plt.figure(figsize = (10,5)), creates a new figure with a width of 10 inches and a height of 5 inches.

The third line of code, sns.heatmap(df[cols].isnull()), plots a heatmap of the missing values in the DataFrame. The sns.heatmap() function takes a DataFrame as input and returns a heatmap of the missing values. The isnull() method of the DataFrame returns a Boolean DataFrame that indicates whether each value in the DataFrame is missing or not.

The heatmap will show the missing values in the DataFrame as white cells. The darker the cell, the more missing values there are in that column.
"""

#Get the percentage of missing values in each column
missing_pct = round(df.isnull().sum()/len(df) * 100, 1)
print(missing_pct)

"""The code you provided will calculate the percentage of missing values in each column of a Pandas DataFrame df and print the results. The output of the code will be a Series with the percentage of missing values in each column, rounded to 1 decimal place."""

# we can drop column Easement and Apartment_Number
#df.drop["Easement","Apartment_Number"].head()

#columns with more than 30% missing values
drop_cols = missing_pct[missing_pct > 30].index

#We can drop these columns with greater than 30 percent missing values
df_new = df.drop(columns = drop_cols)

#Extract columns with mising values between 1 and 30%
replace_cols = missing_pct[(missing_pct > 0) & (missing_pct < 30)].index

#Iterate to replace missing values
for col in replace_cols:
    #if column is year built we replace with median otherwise the mean
    if col == "Year_Built":
        df_new.fillna(df_new[col].median(), inplace = True)
    else:
        mean_value = df_new[col].mean()
        df_new.fillna(mean_value, inplace = True)

#preview for missing values
df_new.isnull().sum()

